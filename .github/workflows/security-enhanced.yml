name: Enhanced Security Analysis
on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]
  schedule:
    - cron: '0 2 * * 1'  # Run weekly on Mondays at 2 AM

jobs:
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: ['python']
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality
          
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
        
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: "/language:${{matrix.language}}"
          
  secret-scanning:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: .
          format: sarif
          output: trufflehog-results.sarif
          
      - name: Upload TruffleHog results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: trufflehog-results.sarif
          
  dependency-scanning:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install safety
        run: |
          pip install safety
          
      - name: Run safety check
        run: |
          safety check --json --output safety-report.json
          
      - name: Upload safety report
        uses: actions/upload-artifact@v3
        with:
          name: safety-report
          path: safety-report.json
          
  container-scanning:
    name: Container Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: trivy-results.sarif
          
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [codeql-analysis, secret-scanning, dependency-scanning, container-scanning]
    
    steps:
      - name: Security Scan Summary
        run: |
          echo "ðŸ”’ Enhanced security analysis completed"
          echo "âœ… CodeQL analysis: ${{ needs.codeql-analysis.result }}"
          echo "âœ… Secret scanning: ${{ needs.secret-scanning.result }}"
          echo "âœ… Dependency scanning: ${{ needs.dependency-scanning.result }}"
          echo "âœ… Container scanning: ${{ needs.container-scanning.result }}"
          echo ""
          echo "ðŸ“Š All security checks have been completed"
          echo "ðŸš¨ Any vulnerabilities will be reported in the Security tab"